---
import { NAV_ITEMS, SITE_TITLE } from '../consts';
import ThemeToggle from './ThemeToggle.astro';

const currentPath = Astro.url.pathname;
---

<header class="sticky top-0 z-50 w-full border-b border-gray-200 bg-white/80 backdrop-blur-sm dark:border-gray-800 dark:bg-gray-900/80">
  <div class="mx-auto max-w-6xl px-4">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo / 网站标题 -->
      <div class="flex items-center">
        <a href="/" class="text-xl font-bold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
          {SITE_TITLE.split('|')[0].trim()}
        </a>
      </div>

      <!-- 导航菜单 / Navigation menu -->
      <nav class="hidden md:flex items-center space-x-6">
        {NAV_ITEMS.map((item) => (
          <a
            href={item.href}
            class={`text-sm font-medium transition-colors hover:text-primary-600 dark:hover:text-primary-400 ${
              currentPath === item.href || currentPath.startsWith(item.href + '/')
                ? 'text-primary-600 dark:text-primary-400'
                : 'text-gray-600 dark:text-gray-400'
            }`}
            aria-current={currentPath === item.href ? 'page' : undefined}
          >
            {item.name}
          </a>
        ))}
      </nav>

      <!-- 右侧工具栏 / Right toolbar -->
      <div class="flex items-center space-x-4">
        <!-- 主题切换 / Theme toggle -->
        <ThemeToggle />
        
        <!-- 移动端菜单按钮 / Mobile menu button -->
        <button
          type="button"
          class="md:hidden inline-flex items-center justify-center rounded-md p-2 text-gray-600 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-white"
          aria-controls="mobile-menu"
          aria-expanded="false"
          id="mobile-menu-button"
        >
          <span class="sr-only">打开主菜单 Open main menu</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
          </svg>
        </button>
      </div>
    </div>

    <!-- 移动端菜单 / Mobile menu -->
    <div class="hidden md:hidden" id="mobile-menu">
      <div class="space-y-1 pb-3 pt-2">
        {NAV_ITEMS.map((item) => (
          <a
            href={item.href}
            class={`block px-3 py-2 text-base font-medium rounded-md transition-colors ${
              currentPath === item.href || currentPath.startsWith(item.href + '/')
                ? 'bg-primary-50 text-primary-600 dark:bg-primary-900/20 dark:text-primary-400'
                : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-white'
            }`}
            aria-current={currentPath === item.href ? 'page' : undefined}
          >
            {item.name}
          </a>
        ))}
      </div>
    </div>
  </div>
</header>

<script>
  // 移动端菜单切换 / Mobile menu toggle
  const menuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  menuButton?.addEventListener('click', () => {
    const expanded = menuButton.getAttribute('aria-expanded') === 'true';
    menuButton.setAttribute('aria-expanded', (!expanded).toString());
    mobileMenu?.classList.toggle('hidden');
  });

  // 点击菜单项后关闭移动端菜单 / Close mobile menu after clicking menu item
  const mobileMenuLinks = mobileMenu?.querySelectorAll('a');
  mobileMenuLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      menuButton?.setAttribute('aria-expanded', 'false');
    });
  });
</script>